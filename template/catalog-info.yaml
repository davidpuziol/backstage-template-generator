apiVersion: scaffolder.backstage.io/v1beta3
kind: Template

metadata:
  name: ${{ values.name  }}
  title: ${{ values.name }} Template
  description: Base template for creating ${{ values.name }}-based projects
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - ${{ values.principalTag }}
    {% for tag in values.otherTags %}
    - ${{ tag }}
    {% endfor %}

spec:
  owner: ${{ values.owner }}
  type: ${{ values.type | default('resource') }}
  lifecycle: production
  parameters:
    - title: General Inputs
      required:
        - name
        - owner
      properties:
        name:
          title: Template Name
          type: string
          pattern: "^[a-z-]+$"
          description: Template Name
          ui:autofocus: true
          ui:help: 'Only lowercase and dashes'
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowArbitraryValues: false
            catalogFilter:
              kind: Group
              spec.type: team
        principalTag:
          title: General Tag
          type: string
          description: Principal Tag
          default: general
          enum:
            - code
            - infra
            - general
          ui:help: 'Used to categorize the template'
        otherTags:
          description: List of other tags (only lowercase letters and hyphen allowed)
          type: array
          items:
            type: string
            pattern: "^[a-z]+$"
          ui:field: MultiTagInputField 

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
      values:
        name: ${{ '${{ parameters.name }}' }}
        owner: ${{ '${{ parameters.owner }}' }}
        principalTag: ${{ '${{ parameters.principalTag }}' }}
        otherTags: ${{ '${{ parameters.otherTags }}' }}
        description: ${{ '${{ parameters.description }}' }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ '${{  parameters.name }}' }}
        repoUrl: ${{ '${{ parameters.repoUrl.split("repo=")[0] }}' }}repo=backstage-template-${{ '${{ parameters.repoUrl.split("repo=")[1] }}' }}
        repoVisibility: private
    - id: register
      name: Register
      action: catalog:register
      input: 
        repoContentsUrl: ${{ "${{ steps['publish'].output.repoContentsUrl }}" }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ "${{ steps['publish'].output.remoteUrl }}" }}
